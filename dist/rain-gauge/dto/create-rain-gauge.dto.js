"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateRainGaugeDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
class CreateRainGaugeDto {
    date;
    name;
    file_base64;
}
exports.CreateRainGaugeDto = CreateRainGaugeDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        example: '2025-05-01',
        description: 'Tanggal pencatatan data pos hujan',
    }),
    (0, class_validator_1.IsDateString)(),
    __metadata("design:type", String)
], CreateRainGaugeDto.prototype, "date", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        example: 'Rain Gauge Station A',
        description: 'Nama stasiun pengukur hujan',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CreateRainGaugeDto.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        example: 'data:@file/jpeg;base64,',
        description: 'File pos hujan dalam bentuk base64',
    }),
    (0, class_validator_1.IsUrl)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CreateRainGaugeDto.prototype, "file_base64", void 0);
//# sourceMappingURL=create-rain-gauge.dto.js.map